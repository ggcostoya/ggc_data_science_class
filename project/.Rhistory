geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
geom_smooth(col = "black", alpha = 0.25,
method = "glm",  method.args = list(family = "binomial")) +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal()
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
geom_smooth(col = "black", alpha = 0.25,
method = "glm",  method.args = list(family = "binomial")) +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
geom_smooth(col = "black", alpha = 0.25, lwd = 2,
method = "glm",  method.args = list(family = "binomial")) +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
geom_smooth(col = "black", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "black", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "lightgray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(2,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.5,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter() +
geom_smooth(method = "glm",  method.args = list(family = "binomial")) +
xlim(2,10)
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter() +
geom_smooth(method = "glm",  method.args = list(family = "binomial"))
parents50 <- read_csv("data/50parents.csv")
parents50 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter() +
geom_smooth(method = "glm",  method.args = list(family = "binomial"))
parents50 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
out_test %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents50 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents_50 <- read_csv("data/50parents.csv")
parents_200 <- read_csv("data/200parents.csv")
parents_200 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkred") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents_100 <- read_csv("data/base.csv") %>% mutate(N_parents = rep(100, nrow(.)))
parents_50 <- read_csv("data/50parents.csv") %>% mutate(N_parents = rep(50, nrow(.)))
parents_200 <- read_csv("data/200parents.csv") %>% mutate(N_parents = rep(200, nrow(.)))
parents <- rbind(parents_100, parents_50, parents_200)
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage, col = N_parents)) +
geom_smooth(alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5) +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5) +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(2,10), expand = c(0.25,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(2,10), expand = c(0.025,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.85,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25))
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25)) +
guides(fill=guide_legend(title="Number of parents"))
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25))
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25))
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 2, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25),
legend.text = element_text(size = 12))
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 3, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.75, 0.25),
legend.text = element_text(size = 12))
parents_200 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkgray") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "darkgray") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black") +
xlim(1.8,10) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
# plot full observation
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter() +
geom_smooth(method = "glm",  method.args = list(family = "binomial"))
# plot full observation
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_jitter(size = 0.5, col = "black") +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial"))
geom_jitter(size = 0.5, col = "black") +
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black")
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0))
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)")
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 2,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 4, alpha = 0.5, col = "black") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
# plot full observation
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
# plot full observation
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter( size = 1, alpha = 0.5, col = "black") +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
# plot full observation
parents_100 %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage)) +
geom_smooth(col = "gray", alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter( size = 2, alpha = 0.5, col = "black") +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line())
## exploring the effects of different parentages
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 3, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.9, 0.25),
legend.text = element_text(size = 12))
## exploring the effects of different parentages
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 3, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.9, 0.1),
legend.text = element_text(size = 12))
## exploring the effects of different parentages
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 3, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.9, 0.15),
legend.text = element_text(size = 12))
## exploring the effects of different parentages
parents %>%
ggplot(aes(x = 100 - 100 * percentage_snps_rm, y = correct_parentage,
col = as.factor(N_parents), fill = as.factor(N_parents))) +
geom_smooth(alpha = 0.25, size = 1,
method = "glm",  method.args = list(family = "binomial")) +
geom_jitter(width = 0.1, size = 3, alpha = 0.5) +
scale_fill_discrete(name = "Number of parents") +
scale_color_discrete(name = "Number of parents") +
scale_x_continuous(breaks = c(2:10), limits = c(1.8,10), expand = c(0,0)) +
xlab("Number of SNPs used") +
ylab("Parentage relationships assigned correctly (%)") +
theme_minimal() +
theme(axis.line = element_line(),
legend.position = c(0.8, 0.2),
legend.text = element_text(size = 12))
